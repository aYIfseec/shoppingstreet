/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = 'http://maven.aliyun.com/nexus/content/groups/public//'
    }

    maven { url = 'http://nexus.xiaomaiketang.com:8081/repository/xiaomai-thirdparty' }


    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}



configurations {
    mybatisGenerator
}


dependencies {
    compile 'org.springframework.boot:spring-boot-starter-aop:2.1.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-jdbc:2.1.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-web:2.1.3.RELEASE'
    compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.0'
    compile 'mysql:mysql-connector-java:8.0.15'
    compile 'org.apache.commons:commons-lang3:3.8.1'
    compile 'com.alibaba:fastjson:1.2.47'
    compile 'tk.mybatis:mapper:4.0.3'
    compile 'com.github.pagehelper:pagehelper:5.1.2'
    compile 'com.github.pagehelper:pagehelper-spring-boot-starter:1.2.5'
    compile 'redis.clients:jedis:2.9.0'
    compile 'org.mongodb.morphia:morphia:1.3.2'
    compile 'org.projectlombok:lombok:1.18.6'
    compile 'com.alibaba:druid:1.1.10'
    compile 'javax.persistence:persistence-api:1.0'
    compile 'com.google.guava:guava:20.0'
    compile 'commons-collections:commons-collections:3.2.2'
    compile 'joda-time:joda-time:2.9.9'
    compile 'org.mybatis.generator:mybatis-generator-maven-plugin:1.3.3'
    compile 'org.springframework.boot:spring-boot-devtools:2.1.3.RELEASE'

    runtimeOnly 'mysql:mysql-connector-java:5.1.42'
    
    testCompile 'org.springframework.boot:spring-boot-starter-test:2.1.3.RELEASE'


    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
//	mybatisGenerator 'com.softwareloop:mybatis-generator-lombok-plugin:1.0'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.42'
    mybatisGenerator 'tk.mybatis:mapper:4.0.3'
    mybatisGenerator 'com.jiejing:mybatis-generator-plugin:1.0.0'
}

group = 'com.hyk'
version = '0.0.1-SNAPSHOT'
description = 'shoppingstreet'
sourceCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
//
//tasks.withType(JavaCompile) {
//    options.encoding = 'UTF-8'
//}




def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/mybatis/config.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties
}

task mybatisGenerate {
    doLast {
        def properties = getDbProperties()
        ant.properties['targetProject'] = projectDir.path
        ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
        ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
        ant.properties['userId'] = properties.getProperty("jdbc.username")
        ant.properties['password'] = properties.getProperty("jdbc.password")
        ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
        ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
        ant.properties['modelPackage'] = properties.getProperty("package.model")
        ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
        ant.properties['sqlMapperPackage'] = properties.getProperty("package.mapperxml")
        ant.taskdef(
                name: 'mbgenerator',
                classname: 'org.mybatis.generator.ant.GeneratorAntTask',
                classpath: configurations.mybatisGenerator.asPath
        )
        ant.mbgenerator(overwrite: true,
                configfile: 'src/main/resources/mybatis/generatorConfig.xml', verbose: true) {
            propertyset {
                propertyref(name: 'targetProject')
                propertyref(name: 'userId')
                propertyref(name: 'driverClass')
                propertyref(name: 'connectionURL')
                propertyref(name: 'password')
                propertyref(name: 'src_main_java')
                propertyref(name: 'src_main_resources')
                propertyref(name: 'modelPackage')
                propertyref(name: 'mapperPackage')
                propertyref(name: 'sqlMapperPackage')
            }
        }
    }
}